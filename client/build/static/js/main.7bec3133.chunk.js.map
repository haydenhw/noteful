{"version":3,"sources":["context.js","api.js","components/Nav.js","components/ErrorBoundary.js","components/Sidebar.js","components/Main.js","components/FolderList.js","components/Container.js","components/Note.js","components/NoteList.js","views/MainView.js","views/FolderView.js","views/NoteView.js","components/ValidationError.js","components/FolderForm.js","components/AddFolder.js","views/AddFolderView.js","components/NoteForm.js","components/AddNote.js","views/AddNoteView.js","App.js","serviceWorker.js","index.js"],"names":["initialState","folders","notes","reducer","state","action","type","newFolder","filter","folder","id","newNote","note","StateContext","createContext","StateProvider","props","Provider","value","useReducer","children","useStateValue","useContext","API_ROOT","requests","url","axios","get","then","data","body","post","patch","delete","api","fetchFolders","createFolder","updateFolder","deleteFolder","fetchNotes","createNote","updateNote","deleteNote","style","nav","paddingLeft","Nav","className","to","ErrorBoundary","hasError","this","error","console","React","sidebarWrapper","height","width","Sidebar","main","padding","Main","sidebar","transform","position","FolderList","selectedFolderId","useParams","history","useHistory","folderList","map","f","listItemStyle","backgroundColor","key","name","onClick","push","flexContainer","display","Container","row","colRight","justifyContent","alignItems","Note","color","Date","modified","toString","onDelete","noteListWrap","maxHeight","overflow","propTypes","PropTypes","array","NoteList","dispatch","a","alert","noteList","n","MainView","FolderView","selectedNotes","folderId","NoteView","selectedNoteId","find","folderName","content","ValidationError","message","form","margin","saveButton","marginLeft","FolderForm","touched","setState","event","preventDefault","onSubmit","shortId","generate","trim","length","nameError","validateName","e","handleSubmit","title","htmlFor","onChange","updateName","target","disabled","Component","tryToAddFolder","AddFolder","err","AddFolderView","NoteForm","validateContent","log","contentError","folderSelectOptions","updateContent","tryToAddNote","AddNote","AddNoteView","loadNotesAndFolders","Promise","all","App","useEffect","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7bec3133.chunk.js","sourcesContent":["import React, {createContext, useContext, useReducer} from 'react';\n\nconst initialState = {\n  folders: [],\n  notes: []\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'loadFolders':\n      return {\n        ...state,\n        folders: action.folders,\n      };\n    case 'addFolder':\n      return {\n        ...state,\n        folders: [...state.folders, action.newFolder]\n      };\n    case 'deleteFolder':\n      return {\n        ...state,\n        folders: state.folders.filter(folder => folder.id !== action.id)\n      };\n    case 'loadNotes':\n      return {\n        ...state,\n        notes: action.notes,\n      };\n    case 'addNote':\n      return {\n        ...state,\n        notes: [...state.notes, action.newNote]\n      };\n    case 'deleteNote':\n      return {\n        ...state,\n        notes: state.notes.filter(note => note.id !== action.id)\n      };\n    default:\n      return state;\n  }\n};\n\n\nconst StateContext = createContext();\nexport const StateProvider = (props) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {props.children}\n  </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n","import axios from 'axios';\nconst API_ROOT = 'http://localhost:9090';\n\nconst requests = {\n  get(url) {\n    return axios.get(`${API_ROOT}${url}`).then(({ data }) => data);\n  },\n  post(url, body) {\n    return axios.post(`${API_ROOT}${url}`, body).then(({ data }) => data);\n  },\n  patch(url, body) {\n    return axios.patch(`${API_ROOT}${url}`, body).then(({ data }) => data);\n  },\n  delete(url, body) {\n    return axios.delete(`${API_ROOT}${url}`).then(({ data }) => data);\n  },\n};\n\nconst api = {\n  fetchFolders() {\n    return requests.get('/folders');\n  },\n  createFolder(newFolder) {\n    return requests.post('/folders', newFolder);\n  },\n  updateFolder(id) {\n    return requests.patch(`/folders/${id}`);\n  },\n  deleteFolder(id) {\n    return requests.delete(`/folders/${id}`);\n  },\n  fetchNotes() {\n    return requests.get('/notes');\n  },\n  createNote(newNote) {\n    return requests.post('/notes', newNote);\n  },\n  updateNote(id) {\n    return requests.patch(`/notes/${id}`);\n  },\n  deleteNote(id) {\n    return requests.delete(`/notes/${id}`);\n  },\n};\n\nexport default api;\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst style = {\n  nav: {\n    paddingLeft: '15px',\n  }\n}\n\nfunction Nav() {\n  return (\n    <nav>\n      <div style={style.nav} className=\"nav-wrapper\">\n        <Link className=\"brand-logo\" to='/'>Noteful</Link>\n      </div>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import * as React from \"react\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    console.error(error);\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Oops, Something went wrong.</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport ErrorBoundary from \"./ErrorBoundary\";\n\nconst style = {\n  sidebarWrapper: {\n    height: '100%',\n    width: '300px',\n  },\n}\n\nfunction Sidebar(props) {\n  return (\n    <ErrorBoundary>\n      <div style={style.sidebarWrapper}>\n        {props.children}\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default Sidebar;\n","import React from 'react';\nimport ErrorBoundary from \"./ErrorBoundary\";\n\nconst style = {\n  main: {\n    padding: '30px',\n    width: '100%',\n  }\n}\n\nfunction Main(props) {\n  return (\n    <ErrorBoundary>\n      <main style={style.main}>\n        {props.children}\n      </main>\n    </ErrorBoundary>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport {Link, useParams, useHistory} from \"react-router-dom\";\nimport {useStateValue} from \"../context\";\n\nconst style = {\n  sidebar: {\n    transform: 'translateX(0%)',\n    position: 'static',\n    height: '100%',\n  }\n};\n\nfunction FolderList() {\n  const [{folders}, dispatch] = useStateValue();\n  const {id: selectedFolderId} = useParams();\n  const history = useHistory();\n  const routeToAddFolderView = () => {\n    history.push('/add-folder')\n  }\n  const folderList = folders.map(f => {\n      const listItemStyle = {backgroundColor: f.id === selectedFolderId ? 'lightgrey' : ''};\n      return (\n        <li style={listItemStyle} key={f.id}>\n          <Link to={`/folder/${f.id}`}>\n            {f.name}\n          </Link>\n        </li>\n      );\n\n    }\n  );\n  return (\n    <ul style={style.sidebar} className=\"sidenav sidenav-fixed\">\n      {folderList}\n      <li>\n        <div style={{paddingLeft: '15px'}}>\n          <button className=\"waves-effect waves-light btn\"\n                  onClick={routeToAddFolderView }\n          >Add Folder\n          </button>\n        </div>\n      </li>\n    </ul>\n  );\n}\n\nexport default FolderList;\n","import React from 'react';\n\nconst style = {\n  flexContainer: {\n    display: 'flex',\n    height: '100%'\n  }\n}\n\nfunction Container(props) {\n  return (\n    <div style={style.flexContainer}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\n\nconst style = {\n  row: {\n    display: 'flex',\n  },\n  colRight: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'flex-end',\n    alignItems: 'flex-end',\n  },\n}\n\n\n\nfunction Note(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"card-content\" style={style.row}>\n        <div className=\"col-left\">\n          <Link style={{color: 'black'}} to={`/note/${props.id}`} className=\"card-title\">{props.name}</Link>\n          <span>{new Date(props.modified).toString()}</span>\n        </div>\n        <div className=\"col-right\" style={style.colRight}>\n          <button onClick={props.onDelete} className=\"waves-effect waves-light btn\">Delete Note</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nNote.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n}\n\nexport default Note;\n","import React from 'react';\nimport Note from \"./Note\";\nimport { useHistory } from \"react-router-dom\"\nimport {useStateValue} from \"../context\";\nimport api from \"../api\";\nimport PropTypes from \"prop-types\";\n\nconst style = {\n  noteListWrap: {\n    maxHeight: '70vh',\n    overflow: 'scroll',\n  }\n}\n\nfunction NoteList(props) {\n  const [state, dispatch] = useStateValue();\n  const deleteNote = async (id) => {\n    try {\n      await api.deleteNote(id)\n      dispatch({\n        type: 'deleteNote',\n        id,\n      })\n    } catch(err) {\n      alert(err)\n    }\n  }\n\n  const history = useHistory()\n  const routeToAddNotesView = () => {\n    history.push('/add-note')\n  }\n\n  props.notes = null;\n  const noteList = props.notes.map(n => <Note key={n.id} onDelete={() => deleteNote(n.id)} {...n} />)\n  return (\n    <div className=\"notes\">\n      <div style={style.noteListWrap}>\n        {noteList}\n      </div>\n      <button onClick={routeToAddNotesView } className=\"waves-effect waves-light btn\">Add Note</button>\n    </div>\n  );\n}\n\nNote.propTypes = {\n  notes: PropTypes.array,\n}\n\nexport default NoteList;\n","import React from 'react';\nimport Sidebar from \"../components/Sidebar\";\nimport Main from \"../components/Main\";\nimport FolderList from \"../components/FolderList\";\nimport Container from \"../components/Container\";\nimport NoteList from \"../components/NoteList\";\nimport {useStateValue} from \"../context\";\n\nfunction MainView() {\n  const [{folders, notes}] = useStateValue();\n  return (\n    <Container>\n      <Sidebar>\n        <FolderList />\n      </Sidebar>\n      <Main>\n        <NoteList notes={notes} />\n      </Main>\n    </Container>\n  );\n}\n\nexport default MainView;\n","import React from 'react';\nimport {useParams} from \"react-router-dom\";\nimport Sidebar from \"../components/Sidebar\";\nimport Main from \"../components/Main\";\nimport FolderList from \"../components/FolderList\";\nimport Container from \"../components/Container\";\nimport NoteList from \"../components/NoteList\";\nimport {useStateValue} from \"../context\";\n\nfunction FolderView() {\n  const { id: selectedFolderId  } = useParams();\n  const [{notes}] = useStateValue();\n  const selectedNotes = notes.filter(n => n.folderId === selectedFolderId);\n  return (\n    <Container>\n      <Sidebar>\n        <FolderList />\n      </Sidebar>\n      <Main>\n        <NoteList notes={selectedNotes}/>\n      </Main>\n    </Container>\n  );\n}\n\nexport default FolderView;\n","import React from 'react';\nimport {Link, useParams, useHistory} from \"react-router-dom\";\nimport Sidebar from \"../components/Sidebar\";\nimport Main from \"../components/Main\";\nimport Container from \"../components/Container\";\nimport Note from \"../components/Note\";\nimport {useStateValue} from \"../context\";\nimport api from \"../api\";\n\nfunction NoteView() {\n  const { id: selectedNoteId  } = useParams();\n  const [{folders, notes}, dispatch] = useStateValue();\n  const history = useHistory();\n\n  const deleteNote = async (id) => {\n    try {\n      await api.deleteNote(id)\n      history.push('/')\n      dispatch({\n        type: 'deleteNote',\n        id,\n      })\n    } catch(err) {\n      alert(err)\n    }\n  }\n\n  const note = notes.find(n => n.id === selectedNoteId)\n  const folderName = folders.find(f => f.id === note.folderId).name;\n  return (\n    <Container>\n      <Sidebar>\n        <div style={{padding: '15px'}}>\n          <Link to=\"/\" className=\"waves-effect waves-light btn\" >Go Back</Link>\n          <h4>{folderName}</h4>\n        </div>\n      </Sidebar>\n      <Main>\n        <Note onDelete={() => deleteNote(note.id)} {...note}/>\n        <p>{note.content}</p>\n      </Main>\n    </Container>\n  );\n}\n\nexport default NoteView;\n","import React from 'react';\n\nexport default function ValidationError(props) {\n  if(props.message) {\n    return (\n      <div className=\"error\">{props.message}</div>\n    );\n  }\n\n  return <></>\n}\n","import React, {Component} from \"react\";\nimport shortId from 'shortid'\nimport ValidationError from \"./ValidationError\";\nimport PropTypes from \"prop-types\";\n\nconst style = {\n  form: {\n    margin: '0 auto',\n    width: '400px',\n  },\n  saveButton: {\n    marginLeft: '10px',\n  }\n}\n\nclass FolderForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: {\n        value: \"\",\n        touched: false\n      },\n    };\n  }\n\n  updateName(name) {\n    this.setState({name: {value: name, touched: true}});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const {name} = this.state;\n    this.props.onSubmit({name: name.value, id: shortId.generate()})\n  }\n\n  validateName() {\n    const name = this.state.name.value.trim();\n    if (name.length === 0) {\n      return \"Name is required\";\n    } else if (name.length < 3) {\n      return \"Name must be at least 3 characters long\";\n    }\n  }\n\n  render() {\n    const nameError = this.validateName();\n    return (\n      <form style={style.form} onSubmit={e => this.handleSubmit(e)}>\n        <h2>{this.props.title}</h2>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Folder Name *</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            onChange={e => this.updateName(e.target.value)}\n          />\n          {this.state.name.touched && <ValidationError message={nameError}/>}\n        </div>\n        <div>\n          <button type=\"reset\" className=\"waves-effect waves-light btn\">\n            Cancel\n          </button>\n          <button\n            style={style.saveButton}\n            type=\"submit\"\n            className=\"waves-light btn\"\n            disabled={this.validateName()}\n          >\n            Save\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nFolderForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n\nexport default FolderForm;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom'\nimport FolderForm from \"./FolderForm\";\nimport {useStateValue} from \"../context\";\nimport api from \"../api\";\n\nconst tryToAddFolder = async (dispatch, history, newFolder) => {\n\n  await api.createFolder(newFolder)\n  dispatch({\n    type: 'addFolder',\n    newFolder\n  })\n\n  history.push('/')\n}\n\nfunction AddFolder() {\n  const [state, dispatch] = useStateValue();\n  const history = useHistory();\n  const addFolder = (newFolder) => {\n      try {\n        tryToAddFolder(dispatch, history, newFolder)\n      } catch(err) {\n        console.error(` Unfortunately your request to create a new folder failed with error: \\n ${err}`)\n      }\n  }\n\n  return (\n    <FolderForm title=\"New Folder\" onSubmit={addFolder}/>\n  );\n}\n\nexport default AddFolder;\n","import React from 'react';\nimport Container from \"../components/Container\";\nimport AddFolder from \"../components/AddFolder\";\n\nfunction AddFolderView() {\n  return (\n    <Container>\n      <AddFolder />\n    </Container>\n  );\n}\n\nexport default AddFolderView;\n","import React, {Component} from \"react\";\nimport shortId from 'shortid';\nimport ValidationError from \"./ValidationError\";\nimport PropTypes from \"prop-types\";\n\nconst style = {\n  form: {\n    margin: '0 auto',\n    width: '400px',\n  },\n  saveButton: {\n    marginLeft: '10px',\n  }\n}\n\nclass NoteForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: {\n        value: \"\",\n        touched: false\n      },\n      content: {\n        value: \"\",\n        touched: false\n      },\n      folder: {\n        value: \"\",\n        touched: false\n      },\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.folders && this.props.folders.length) {\n      this.setState({folder:{ value: this.props.folders[0].id, touched: false}})\n    }\n  }\n\n  updateName(name) {\n    this.setState({name: {value: name, touched: true}});\n  }\n\n  updateContent(content) {\n    this.setState({content: {value: content, touched: true}});\n  }\n\n  updateFolder(folder) {\n    this.setState({folder: {value: folder, touched: true}});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    if (!this.validateContent() && !this.validateName()) {\n      const {name, content, folder} = this.state;\n      const newFolder = {\n        name: name.value,\n        content: content.value,\n        modified: new Date(),\n        folderId: folder.value,\n        id: shortId.generate()\n      }\n      console.log(newFolder)\n      this.props.onSubmit(newFolder)\n    }\n  }\n\n  validateName() {\n    const name = this.state.name.value.trim();\n    if (name.length === 0) {\n      return \"Name is required\";\n    } else if (name.length < 3) {\n      return \"Name must be at least 3 characters long\";\n    }\n  }\n\n  validateContent() {\n    const content = this.state.content.value.trim();\n    if (content.length === 0) {\n      return \"Content is required\";\n    } else if (content.length < 3) {\n      return \"Content must be at least 3 characters long\";\n    }\n  }\n\n\n  render() {\n    const nameError = this.validateName();\n    const contentError = this.validateContent();\n\n    const folderSelectOptions = this.props.folders.map((folder) => (\n      <option key={folder.id}  value={folder.id}>{folder.name}</option>\n    ))\n\n    return (\n      <form className=\"registration\" style={style.form} onSubmit={e => this.handleSubmit(e)}>\n        <h2>{this.props.title}</h2>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Note Name *</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            onChange={e => this.updateName(e.target.value)}\n          />\n          {this.state.name.touched && <ValidationError message={nameError}/>}\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"content\">Content *</label>\n          <input\n            type=\"text\"\n            name=\"content\"\n            id=\"content\"\n            onChange={e => this.updateContent(e.target.value)}\n          />\n          {this.state.content.touched && <ValidationError message={contentError}/>}\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"content\">Folder\n            <select onChange={e => this.updateFolder(e.target.value)} style={{display: 'block'}} name=\"folder-select\" id=\"folder-select\">\n              {folderSelectOptions}\n            </select>\n          </label>\n          {this.state.content.touched && <ValidationError message={contentError}/>}\n        </div>\n        <div>\n          <button type=\"reset\" className=\"waves-effect waves-light btn\">\n            Cancel\n          </button>\n          <button\n            style={style.saveButton}\n            type=\"submit\"\n            className=\"waves-light btn\"\n            disabled={this.validateName() || this.validateContent()}\n          >\n            Save\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nNoteForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\nexport default NoteForm;\n","import React from 'react';\nimport shortId from 'shortid'\nimport { useHistory } from 'react-router-dom'\nimport NoteForm from \"./NoteForm\";\nimport {useStateValue} from \"../context\";\nimport api from \"../api\";\n\nconst tryToAddNote = async (dispatch, history, newNote) => {\n  newNote.id = shortId.generate();\n\n  await api.createNote(newNote)\n  dispatch({\n    type: 'addNote',\n    newNote\n  })\n\n  history.push('/')\n}\n\nfunction AddNote() {\n  const [{folders}, dispatch] = useStateValue();\n  const history = useHistory();\n  const addNote = (newNote) => {\n      try {\n        tryToAddNote(dispatch, history, newNote)\n      } catch(err) {\n        console.error(` Unfortunately your request to create a new note fail with error: \\n ${err}`)\n      }\n  }\n\n  if (!folders.length) {\n    return <></>\n  }\n\n  return (\n    <NoteForm title=\"New Note\" folders={folders} onSubmit={addNote}/>\n  );\n}\n\nexport default AddNote;\n","import React from 'react';\nimport Container from \"../components/Container\";\nimport AddNote from \"../components/AddNote\";\n\nfunction AddNoteView() {\n  return (\n    <Container>\n      <AddNote />\n    </Container>\n  );\n}\n\nexport default AddNoteView;\n","import React, {useEffect} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport {useStateValue} from \"./context\";\nimport api from \"./api\";\nimport Nav from './components/Nav';\nimport MainView from \"./views/MainView\";\nimport FolderView from \"./views/FolderView\";\nimport NoteView from \"./views/NoteView\";\nimport AddFolderView from \"./views/AddFolderView\";\nimport AddNoteView from \"./views/AddNoteView\";\n\nconst loadNotesAndFolders = async (dispatch) => {\n  const [folders, notes] = await Promise.all([\n    api.fetchFolders(),\n    api.fetchNotes(),\n  ])\n\n  dispatch({\n    type: 'loadFolders',\n    folders,\n  })\n\n  dispatch({\n    type: 'loadNotes',\n    notes,\n  })\n}\n\nfunction App() {\n  const [state, dispatch] = useStateValue();\n  useEffect(() => {\n    try {\n      loadNotesAndFolders(dispatch)\n    } catch(err) {\n      console.log('Failed to fetch notes and or folders with the following error:')\n      console.error(err);\n    }\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav/>\n          <Switch>\n            <Route exact path=\"/\">\n              <MainView/>\n            </Route>\n            <Route path=\"/folder/:id\">\n              <FolderView/>\n            </Route>\n            <Route path=\"/note/:id\">\n              <NoteView/>\n            </Route>\n            <Route path=\"/add-folder\">\n              <AddFolderView/>\n            </Route>\n            <Route path=\"/add-note\">\n              <AddNoteView/>\n            </Route>\n          </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {StateProvider} from \"./context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider>\n      <App/>\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}